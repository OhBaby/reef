This document is currently copypasta from an email. Sorry about the /'s
and very strict word-wrapping @ 80 chars - blame outlook/thunderbird.

We should work on entering this onto a bug trackers.

Following the meeting on 22/10/10, we decided the requirements could be
split into two "Phases" :

Setup Phase
========
The user must be able to:
  * Set up security. /(This should be a trivial task, and maybe even
totally transparent to the user)/
  * Define the location of Vazels /(Perhaps the GUI in installed in a
directory different to the main Vazels script)/
  * Specify each of the the following in a GUI-oriented way:
     - Actors /(How Vazels "stimulates" the SUE. Actors perform tasks
that potentially put load on the SUE, then record some of the results)/
     - Workloads /(Which actors are doing what and when? Chain actions &
record a set of results all together)/
     - Groups /(How many machines will there be with each setup? What
workloads will each machine be asked to perform? Which actors does it
need to carry those workloads out?)
/* Save all the user-defined configuration to a project file /(Finished
config, but not yet ready to run. Also, maybe want to save
actors/workloads for later re-use)/
* Once the user has defined the above in the GUI, create the server &
copy the appropriate files into the appropriate directories. Then serve
up a tarball with the "probe_folder" . The users should only be given
this probe (or at least only told about it) once everything's dropped
into the right directories so it's safe for them to run the probe on the
target machines.

  * Extra: mix-in prefab tests - e.g. netstat/top/ps/... .
  * Extra: visual representation of actors - can we use introspection
(/code analysis) to define Workloads graphically (e.g. class browser,
select the correct class to be invoked etc...) once we've told the GUI
about the actors?
  * Extra: Add meta-info to the project file, e.g.. add descriptions to
groups, actors, etc...

Running Phase
=========
  * Display online/offline hosts. /(Group hosts by which group they are
in, give hostname, status - evolving, running, ... - ... )/
  * Specify which group to assign to next. /(e.g. Declare that the next
- new - host to run the probe will be assigned to group 2)/
  * Some sort of display for test output. /(Where prefab tests are used,
we can display quite well structured information.)/
  * Start/stop button. /(User needs to be able to start & stop the
experiment).
/ * User controls to run tests/get network dumps. /(The user needs to be
able to initiate a workload, initiate a transaction, and get a dump of
information from the network)/.

  * Extra: Graphical (pretty) display for information from prefab tests
/ known data (e.g. performance data that might come as part of network
dumps).
  * Extra: Dynamically alter group sizes (i.e. add/remove hosts from
groups).
  * Extra: Dynamically add create new workloads & actors, and add them
to groups at runtime.
